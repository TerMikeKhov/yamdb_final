# Generated by Django 2.2.16 on 2022-10-06 08:58

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import reviews.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Введите имя пользователя', max_length=150, unique=True, verbose_name='Имя пользователя')),
                ('email', models.EmailField(help_text='Введите e-mail адрес', max_length=254, unique=True, verbose_name='e-mail адрес')),
                ('bio', models.TextField(blank=True, help_text='Напишите биографию пользователя', null=True, verbose_name='Биография')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('user', 'User')], default='user', help_text='Выберите роль пользователя', max_length=9, verbose_name='Роль пользователя')),
                ('first_name', models.CharField(blank=True, help_text='Укажите свое имя', max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Укажите свою фамилию', max_length=150, verbose_name='Фамилия')),
                ('confirmation_code', models.CharField(help_text='Введите свое код подтверждения', max_length=255, verbose_name='Код подтверждения')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название категории', max_length=256, verbose_name='Имя категории')),
                ('slug', models.SlugField(help_text='Введите слаг категории', unique=True, verbose_name='Слаг категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите имя жанра', max_length=200, verbose_name='Имя жанра')),
                ('slug', models.SlugField(help_text='Введите слаг жанра', unique=True, verbose_name='Слаг жанра')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название произведения', max_length=200, verbose_name='Название произведения')),
                ('year', models.PositiveSmallIntegerField(help_text='Введите год выпуска произведения', validators=[reviews.validators.validate_year], verbose_name='Год выпуска произведения')),
                ('description', models.TextField(blank=True, help_text='Введите год описание произведения', null=True, verbose_name='Описание произведения')),
                ('rating', models.PositiveSmallIntegerField(blank=True, help_text='Рейтинг вычисляется на основании score отзывов', null=True, validators=[django.core.validators.MaxValueValidator(10, 'Максимальная оценка - 10'), django.core.validators.MinValueValidator(1, 'Минимальная оценка - 1')], verbose_name='Рейтинг произведения')),
                ('category', models.ForeignKey(help_text='Выберите категорию произведения', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='reviews.Category', verbose_name='Категория произведения')),
                ('genre', models.ManyToManyField(help_text='Выберите жанр произведения', to='reviews.Genre', verbose_name='Жанр произведения')),
            ],
            options={
                'verbose_name': 'Произведение',
                'verbose_name_plural': 'Произведения',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Напишите ваш отзыв', verbose_name='Текст отзыва')),
                ('score', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], help_text='Выберите оценку от 1 до 10', null=True, validators=[django.core.validators.MaxValueValidator(10, 'Максимальная оценка - 10'), django.core.validators.MinValueValidator(1, 'Минимальная оценка - 1')], verbose_name='Оценка произведения')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Выберите дату опубликования отзыва', verbose_name='Дата публикации')),
                ('author', models.ForeignKey(help_text='Выберите автора отзыва', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Автор отзыва')),
                ('title', models.ForeignKey(help_text='Выберите произведение', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='reviews.Title', verbose_name='Произведение')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Введите текст комментария', verbose_name='Текст комментария')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Выберите дату публикации', verbose_name='Дата публикации')),
                ('author', models.ForeignKey(help_text='Выберите автора комментария', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария')),
                ('review', models.ForeignKey(help_text='Выберите отзыв на произведение', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='reviews.Review', verbose_name='Отзыв на произведение')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Коментарии',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('title', 'author'), name='unique_review'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('username', 'email'), name='unique_user'),
        ),
    ]
